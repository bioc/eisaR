name: CI

on: push

jobs:
  build:

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        #- { os: windows-latest, r: '3.6', bioc: 'devel', args: "--no-manual"}
        #- { os: windows-latest, r: 'devel', bioc: 'devel', args: "--no-manual"}
        #- { os: macOS-latest, r: '3.6', bioc: 'devel'}
        #- { os: macOS-latest, r: 'devel', bioc: 'devel', args: "--no-manual"}
        #- { os: ubuntu-18.04, r: '3.6', bioc: 'devel', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest", args: "--no-manual" }
        - { os: ubuntu-16.04, r: 'devel', bioc: 'devel', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest", args: "--no-manual" }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
    - name: checkout branch
      uses: actions/checkout@v1
      
    - name: setup R
      uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.config.r }}

    - name: R version
      run: Rscript -e 'R.version'

    - name: setup Pandoc
      uses: r-lib/actions/setup-pandoc@master

    - name: setup Tex
      uses: r-lib/actions/setup-tinytex@master
      if: contains(matrix.config.args, 'no-manual') == false

    - name: Cache R packages
      id: cache
      uses: actions/cache@v1
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}-${{ hashFiles('.github/workflows/build_and_check.yml') }}

    #- name: Install system dependencies
    #  if: runner.os == 'Linux'
    #  env:
    #    RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
    #  run: |
    #    Rscript -e "install.packages('remotes')" -e "remotes::install_github('r-hub/sysreqs')"
    #    sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
    #    sudo -s eval "$sysreqs"

    #- name: Install R dependencies
    #  run: Rscript -e "install.packages('remotes')" -e "remotes::install_deps(dependencies = TRUE)" -e "remotes::install_cran('rcmdcheck')"

    - name: Install BioC and R dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        Rscript -e "install.packages('remotes')"
        Rscript -e "remotes::install_cran(c('rcmdcheck', 'BiocManager'))"
        Rscript -e "BiocManager::install(version = '${{ matrix.config.bioc }}')"
        Rscript -e "pks <- remotes::dev_package_deps(dependencies = TRUE); print(pks$package); BiocManager::install(pks$package)"

    - name: Check
      run: Rscript -e "rcmdcheck::rcmdcheck(args = '${{ matrix.config.args }}', error_on = 'warning', check_dir = 'check')"

    - name: Upload check results
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ runner.os }}-r${{ matrix.config.r }}-results
        path: check

    - name: Test coverage
      if: matrix.config.os == 'ubuntu-18.04' && matrix.config.r == 'devel'
      run: |
        Rscript -e 'remotes::install_github("r-lib/covr@gh-actions")'
        Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
